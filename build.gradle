buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "https://plugins.gradle.org/m2/"        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'co.riiid:gradle-github-plugin:0.4.2'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.10"
        classpath "org.ajoberstar.reckon:reckon-gradle:0.7.0"
    }
}
//ForgeGradle
apply plugin: 'net.minecraftforge.gradle.forge'
//GithubRelease
apply plugin: 'co.riiid.gradle'
//CurseGradle
apply plugin: "com.matthewprenger.cursegradle"
//Reckon projhect version
apply plugin: "org.ajoberstar.reckon"

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

//version starts out inferred by reckon
//final 	    <major>.<minor>.<patch>                                 1.2.3
//significant   <major>.<minor>.<patch>-<stage>.<num> 	                1.3.0-rc.1
//insignificant <major>.<minor>.<patch>-<stage>.<num>.<commits>+<hash> 	1.3.0-rc.1.8+3bb416187b0a478677b274ae29fb4deb664acda3

reckon {
    scopeFromProp()
    stageFromProp('beta', 'rc', 'final')
}

// example command lines
// ./gradlew build
// ./gradlew build reckonTagPush -Preckon.scope=patch -Preckon.stage=beta
// ./gradlew build reckonTagPush -Preckon.scope=minor -Preckon.stage=rc
// ./gradlew build reckonTagPush -Preckon.scope=major -Preckon.stage=final

group = config.mod.group
archivesBaseName = config.mod.name

ext.versionSimple = (String)version

version = "MC${config.minecraft.version}-${project.version}"

//file name ends up archiveBaseName-version-classifier.jar
//Example: ThaumicComputers-MC1.12.2-0.3.0-deobf.jar

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}"
    runDir = "run"
    mappings = config.minecraft.mappings

    replaceIn "Reference.java"
    replace "@VERSION@", project.versionSimple
}

repositories {
    maven { url = "http://maven.cil.li/" }
}
dependencies {
    compile "li.cil.oc:OpenComputers:${config.oc.version}:api"
    provided files('lib/Thaumcraft-1.12.2-6.1.Beta16-deobf.jar')
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.versionSimple
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.versionSimple, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar, dependsOn: 'jar') {
    from "build/source/main"
    classifier "deobf"
}

artifacts {
    archives deobfJar
    archives sourceJar
}

githubRelease.dependsOn build

github {
    owner = "jco2641"
    repo = "Thaumic_Computers"
    token = GITHUB_API
    tagName = "v" + project.versionSimple
    name = "Version " + project.versionSimple
    body = new File('CHANGELOG.md').text
    draft = true
    assets = [
            "build/libs/${project.archivesBaseName}-${project.version}.jar",
            "build/libs/${project.archivesBaseName}-${project.version}-deobf.jar",
            "build/libs/${project.archivesBaseName}-${project.version}-sources.jar"
    ]
}

curseforge {
    apiKey = CURSE_API
    project {
        id = '293768'
        changelogType ="markdown"
        changelog = file("CHANGELOG.md")
        releaseType = "release"

        mainArtifact(jar) {
            displayName = "${project.archivesBaseName}-${project.version}.jar"
        }
        addArtifact deobfJar
        addArtifact sourceJar
    }
}